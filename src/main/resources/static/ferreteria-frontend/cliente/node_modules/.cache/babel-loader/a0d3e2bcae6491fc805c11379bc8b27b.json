{"ast":null,"code":"var _jsxFileName = \"/home/m4c4c0/ferreteria-api/src/main/resources/static/ferreteria-frontend/cliente/src/CartContext.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport CryptoJS from 'crypto-js';\nexport const CartContext = createContext(); // Usaremos este nombre en toda la app\n\nconst SECRET_KEY = 'MARCO1313$';\nconst cifrarDatos = datos => {\n  return CryptoJS.AES.encrypt(JSON.stringify(datos), SECRET_KEY).toString();\n};\nconst descifrarDatos = datosCifrados => {\n  try {\n    const bytes = CryptoJS.AES.decrypt(datosCifrados, SECRET_KEY);\n    return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n  } catch (e) {\n    console.error('Error al descifrar:', e);\n    return [];\n  }\n};\nexport const CartProvider = ({\n  children\n}) => {\n  const [cart, setCart] = useState([]);\n\n  // Cargar carrito cifrado al iniciar\n  useEffect(() => {\n    const cartCifrado = localStorage.getItem('cartCifrado');\n    if (cartCifrado) {\n      setCart(descifrarDatos(cartCifrado));\n    }\n  }, []);\n\n  // Guardar carrito cifrado al actualizar el carrito\n  useEffect(() => {\n    localStorage.setItem('cartCifrado', cifrarDatos(cart));\n  }, [cart]);\n  const agregarProducto = producto => {\n    setCart([...cart, producto]);\n  };\n  const eliminarProducto = idProducto => {\n    setCart(cart.filter(p => p.id !== idProducto));\n  };\n  const vaciarCarrito = () => setCart([]);\n  return /*#__PURE__*/React.createElement(CartContext.Provider, {\n    value: {\n      cart,\n      agregarProducto,\n      eliminarProducto,\n      vaciarCarrito\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"names":["React","createContext","useState","useEffect","CryptoJS","CartContext","SECRET_KEY","cifrarDatos","datos","AES","encrypt","JSON","stringify","toString","descifrarDatos","datosCifrados","bytes","decrypt","parse","enc","Utf8","e","console","error","CartProvider","children","cart","setCart","cartCifrado","localStorage","getItem","setItem","agregarProducto","producto","eliminarProducto","idProducto","filter","p","id","vaciarCarrito","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/m4c4c0/ferreteria-api/src/main/resources/static/ferreteria-frontend/cliente/src/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport CryptoJS from 'crypto-js';\nexport const CartContext = createContext(); // Usaremos este nombre en toda la app\n\nconst SECRET_KEY = 'MARCO1313$';\n\nconst cifrarDatos = (datos) => {\n  return CryptoJS.AES.encrypt(JSON.stringify(datos), SECRET_KEY).toString();\n};\n\nconst descifrarDatos = (datosCifrados) => {\n  try {\n    const bytes = CryptoJS.AES.decrypt(datosCifrados, SECRET_KEY);\n    return JSON.parse(bytes.toString(CryptoJS.enc.Utf8));\n  } catch (e) {\n    console.error('Error al descifrar:', e);\n    return [];\n  }\n};\n\nexport const CartProvider = ({ children }) => {\n  const [cart, setCart] = useState([]);\n\n  // Cargar carrito cifrado al iniciar\n  useEffect(() => {\n    const cartCifrado = localStorage.getItem('cartCifrado');\n    if (cartCifrado) {\n      setCart(descifrarDatos(cartCifrado));\n    }\n  }, []);\n\n  // Guardar carrito cifrado al actualizar el carrito\n  useEffect(() => {\n    localStorage.setItem('cartCifrado', cifrarDatos(cart));\n  }, [cart]);\n\n  const agregarProducto = (producto) => {\n    setCart([...cart, producto]);\n  };\n\n  const eliminarProducto = (idProducto) => {\n    setCart(cart.filter(p => p.id !== idProducto));\n  };\n\n  const vaciarCarrito = () => setCart([]);\n\n  return (\n    <CartContext.Provider value={{ cart, agregarProducto, eliminarProducto, vaciarCarrito }}>\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAO,MAAMC,WAAW,GAAGJ,aAAa,CAAC,CAAC,CAAC,CAAC;;AAE5C,MAAMK,UAAU,GAAG,YAAY;AAE/B,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7B,OAAOJ,QAAQ,CAACK,GAAG,CAACC,OAAO,CAACC,IAAI,CAACC,SAAS,CAACJ,KAAK,CAAC,EAAEF,UAAU,CAAC,CAACO,QAAQ,CAAC,CAAC;AAC3E,CAAC;AAED,MAAMC,cAAc,GAAIC,aAAa,IAAK;EACxC,IAAI;IACF,MAAMC,KAAK,GAAGZ,QAAQ,CAACK,GAAG,CAACQ,OAAO,CAACF,aAAa,EAAET,UAAU,CAAC;IAC7D,OAAOK,IAAI,CAACO,KAAK,CAACF,KAAK,CAACH,QAAQ,CAACT,QAAQ,CAACe,GAAG,CAACC,IAAI,CAAC,CAAC;EACtD,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVC,OAAO,CAACC,KAAK,CAAC,qBAAqB,EAAEF,CAAC,CAAC;IACvC,OAAO,EAAE;EACX;AACF,CAAC;AAED,OAAO,MAAMG,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMyB,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IACvD,IAAIF,WAAW,EAAE;MACfD,OAAO,CAACb,cAAc,CAACc,WAAW,CAAC,CAAC;IACtC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAzB,SAAS,CAAC,MAAM;IACd0B,YAAY,CAACE,OAAO,CAAC,aAAa,EAAExB,WAAW,CAACmB,IAAI,CAAC,CAAC;EACxD,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMM,eAAe,GAAIC,QAAQ,IAAK;IACpCN,OAAO,CAAC,CAAC,GAAGD,IAAI,EAAEO,QAAQ,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,gBAAgB,GAAIC,UAAU,IAAK;IACvCR,OAAO,CAACD,IAAI,CAACU,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKH,UAAU,CAAC,CAAC;EAChD,CAAC;EAED,MAAMI,aAAa,GAAGA,CAAA,KAAMZ,OAAO,CAAC,EAAE,CAAC;EAEvC,oBACE3B,KAAA,CAAAwC,aAAA,CAACnC,WAAW,CAACoC,QAAQ;IAACC,KAAK,EAAE;MAAEhB,IAAI;MAAEM,eAAe;MAAEE,gBAAgB;MAAEK;IAAc,CAAE;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACrFvB,QACmB,CAAC;AAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}